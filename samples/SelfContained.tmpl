// A self-contained example that we can compile without additional
// dependencies.
Test.Generated.SelfContained
Test.Generated.SelfContained

type CountyNo: Int
type CountyName: String <validations maxLength="32">
type OtherCountyName: wrap String <validations maxLength="32">
type AssessFacilityId: wrap Int
type SomethingMoney: wrap Decimal

// We can wrap a type in a pre-existing newtype
type Bunnies: wrap Int
  <purs
    t="Test.Support.Newint"
    decode="Ccap.Codegen.Runtime.decodeNewtype"
    encode="Data.Newtype.unwrap">

type County: {
  countyNo: CountyNo
  countyName: CountyName
  assessFacilityId: Maybe AssessFacilityId
  soapPort: Int
}

type Big: {
  a1: Int
  b1: String
  c1: Decimal
  d1: Boolean
  a2: Int
  b2: String
  c2: Decimal
  d2: Boolean
  a3: Int
  b3: String
  c3: Decimal
  d3: Boolean
  a4: Int
  b4: String
  c4: Decimal
  d4: Boolean
}

type Response: {
  counties: Array County
}

type CountyEnum: [
  | Adams
  | Ashland
  | Baron
  | Etc
]

